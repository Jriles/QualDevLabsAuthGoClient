/*
QualDevLabsAuth

API for the QualDevLabs Auth library.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qualdevlabs_auth_go_client

import (
	"encoding/json"
)

// SessionTokenAndUserId struct for SessionTokenAndUserId
type SessionTokenAndUserId struct {
	UserId string `json:"userId"`
	Token string `json:"token"`
}

// NewSessionTokenAndUserId instantiates a new SessionTokenAndUserId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTokenAndUserId(userId string, token string) *SessionTokenAndUserId {
	this := SessionTokenAndUserId{}
	this.UserId = userId
	this.Token = token
	return &this
}

// NewSessionTokenAndUserIdWithDefaults instantiates a new SessionTokenAndUserId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTokenAndUserIdWithDefaults() *SessionTokenAndUserId {
	this := SessionTokenAndUserId{}
	return &this
}

// GetUserId returns the UserId field value
func (o *SessionTokenAndUserId) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *SessionTokenAndUserId) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *SessionTokenAndUserId) SetUserId(v string) {
	o.UserId = v
}

// GetToken returns the Token field value
func (o *SessionTokenAndUserId) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *SessionTokenAndUserId) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *SessionTokenAndUserId) SetToken(v string) {
	o.Token = v
}

func (o SessionTokenAndUserId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSessionTokenAndUserId struct {
	value *SessionTokenAndUserId
	isSet bool
}

func (v NullableSessionTokenAndUserId) Get() *SessionTokenAndUserId {
	return v.value
}

func (v *NullableSessionTokenAndUserId) Set(val *SessionTokenAndUserId) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTokenAndUserId) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTokenAndUserId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTokenAndUserId(val *SessionTokenAndUserId) *NullableSessionTokenAndUserId {
	return &NullableSessionTokenAndUserId{value: val, isSet: true}
}

func (v NullableSessionTokenAndUserId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTokenAndUserId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


